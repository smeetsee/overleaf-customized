name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '31 7 * * *'
  workflow_dispatch:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Checkout Overleaf OIDC repo
        uses: actions/checkout@v3
        with:
          repository: Eisfunke/overleaf
          path: overleaf
      
      - name: Patch login page text
        run: cp login.pug overleaf/services/web/app/views/user/login.pug
    
      - name: Patch login button (1)
        run: sed -ie 's;FSorg-Login;Login;g' overleaf/services/web/app/views/layout/navbar.pug

      - name: Patch login button (2)
        run: sed -ie 's;FSorg-Login;Login;g' overleaf/services/web/app/views/layout/navbar-marketing.pug
      
      - name: Change proxy destination address
        run: sed -ie 's;127.0.0.1;localhost;g' overleaf/server-ce/nginx/sharelatex.conf

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.1.2 #v2.6.0
        with:
          cosign-release: 'v2.2.0'

      # Added to fix https://github.com/docker/buildx/issues/499#issuecomment-763920971
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata (base)
        id: meta-base
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push base Docker image
        id: build-and-push-base
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ./overleaf
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-base.outputs.tags }}
          labels: ${{ steps.meta-base.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64, linux/arm64/v8
          file: ./overleaf/server-ce/Dockerfile-base
      
      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published base Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta-base.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push-base.outputs.digest }} -y

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ./overleaf
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # no-cache: true
          platforms: linux/amd64
          file: ./overleaf/server-ce/Dockerfile
          build-args: |
            SHARELATEX_BASE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base:main
            NPM_CONFIG_LOGLEVEL=info


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }} -y

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata (full)
        id: meta-full
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-full

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push full Docker image
        id: build-and-push-full
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ./overleaf
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-full.outputs.tags }}
          labels: ${{ steps.meta-full.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # no-cache: true
          platforms: linux/amd64
          file: ./full.Dockerfile
          build-args: |
            SHARELATEX_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published full Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta-full.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push-full.outputs.digest }} -y

  build_ldap:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Checkout Overleaf patch repo
        uses: actions/checkout@v3
        with:
          repository: smeetsee/ldap-overleaf-sl
          path: overleaf-patches
      
      - name: Checkout Overleaf repo
        uses: actions/checkout@v3
        with:
          repository: overleaf/overleaf
          path: overleaf
      
      - name: Patch AuthenticationManager.js
        run: patch overleaf/services/web/app/src/Features/Authentication/AuthenticationManager.js overleaf-patches/ldap-overleaf-sl/sharelatex/AuthenticationManager.js.diff
      - name: Patch AuthenticationController.js
        run: patch overleaf/services/web/app/src/Features/Authentication/AuthenticationController.js overleaf-patches/ldap-overleaf-sl/sharelatex/AuthenticationController.js.diff
      - name: Patch ContactController.js
        run: patch overleaf/services/web/app/src/Features/Contacts/ContactController.js overleaf-patches/ldap-overleaf-sl/sharelatex/ContactController.js.diff
      - name: Patch router.js
        run: patch overleaf/services/web/app/src/router.js overleaf-patches/ldap-overleaf-sl/sharelatex/router.js.diff
      - name: Patch settings.pug
        run: patch overleaf/services/web/app/views/user/settings.pug overleaf-patches/ldap-overleaf-sl/sharelatex/settings.pug.diff
      - name: Patch login.pug
        run: patch overleaf/services/web/app/views/user/login.pug overleaf-patches/ldap-overleaf-sl/sharelatex/login.pug.diff
      - name: Patch navbar.pug
        run: patch services/web/app/views/layout/navbar.pug overleaf-patches/ldap-overleaf-sl/sharelatex/navbar.pug.diff
      - name: Patch navbar-marketing.pug
        run: patch overleaf/services/web/app/views/layout/navbar-marketing.pug overleaf-patches/ldap-overleaf-sl/sharelatex/navbar-marketing.pug.diff
      - name: Patch admin-index.pug
        # isAdmin group is allowed to add users to sharelatex and post messages
        run: patch overleaf/services/web/app/views/admin/index.pug overleaf-patches/ldap-overleaf-sl/sharelatex/admin-index.pug.diff
      # - name: Patch admin-sysadmin.pug
      # # isAdmin group is allowed to logout other users / set maintenance mode
      #   run: patch overleaf/services/web/app/views/admin/index.pug overleaf-patches/ldap-overleaf-sl/sharelatex/admin-sysadmin.pug.diff

      - name: Enable shell-escape (part 1)
        run: sed -iE "s%-synctex=1\",%-synctex=1\", \"-shell-escape\",%g" overleaf/services/clsi/app/js/LatexRunner.js
      - name: Enable shell-escape (part 2)
        run: sed -iE "s%'-synctex=1',%'-synctex=1', '-shell-escape',%g" overleaf/services/clsi/app/js/LatexRunner.js

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.1.2 #v2.6.0
        with:
          cosign-release: 'v2.2.0'

      # Added to fix https://github.com/docker/buildx/issues/499#issuecomment-763920971
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata (base)
        id: meta-base
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ldap-base

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push base Docker image
        id: build-and-push-base
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ./overleaf-patches/ldap-overleaf-sl/sharelatex
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-base.outputs.tags }}
          labels: ${{ steps.meta-base.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64, linux/arm64/v8
          file: ./overleaf-patches/ldap-overleaf-sl/sharelatex/server-ce/Dockerfile-base
      
      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published base Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta-base.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push-base.outputs.digest }} -y

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ldap

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ./overleaf-patches/ldap-overleaf-sl/sharelatex
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # no-cache: true
          platforms: linux/amd64
          file: ./overleaf-patches/ldap-overleaf-sl/sharelatex/server-ce/Dockerfile
          build-args: |
            SHARELATEX_BASE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ldap-base:main
            NPM_CONFIG_LOGLEVEL=info


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }} -y

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata (full)
        id: meta-full
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ldap-full

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push full Docker image
        id: build-and-push-full
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ./overleaf-patches/ldap-overleaf-sl/sharelatex
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-full.outputs.tags }}
          labels: ${{ steps.meta-full.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # no-cache: true
          platforms: linux/amd64
          file: ./full.Dockerfile
          build-args: |
            SHARELATEX_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ldap:main


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published full Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta-full.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push-full.outputs.digest }} -y